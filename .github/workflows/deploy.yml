name: Deploy to Azure VM

on:
  push:
    branches:
      - deployment
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}

      - name: Add Azure VM to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Set up Docker context for remote host
        run: |
          HOST=$(echo "${{ secrets.AZURE_VM_HOST }}" | tr -d '[:space:]')
          USER=$(echo "${{ secrets.AZURE_VM_USER }}" | tr -d '[:space:]')
          docker context create azure-vm --docker "host=ssh://$USER@$HOST"
          docker context use azure-vm

      - name: Generate .env on Azure VM
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          cat << EOT > ~/budgetwise/.env
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          FIREBASE_SERVICE_ACCOUNT=${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          PUBLIC_BACKEND_API_URL=${{ secrets.PUBLIC_BACKEND_API_URL }}
          PUBLIC_FIREBASE_API_KEY=${{ secrets.PUBLIC_FIREBASE_API_KEY }}
          PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.PUBLIC_FIREBASE_AUTH_DOMAIN }}
          PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.PUBLIC_FIREBASE_PROJECT_ID }}
          PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.PUBLIC_FIREBASE_STORAGE_BUCKET }}
          PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          PUBLIC_FIREBASE_APP_ID=${{ secrets.PUBLIC_FIREBASE_APP_ID }}
          EOT
          EOF

      - name: Deploy with docker-compose
        run: |
          docker --context azure-vm compose -f ./budgetwise/docker-compose.deploy.yml --env-file ./budgetwise/.env down || true
          docker --context azure-vm compose -f ./budgetwise/docker-compose.deploy.yml --env-file ./budgetwise/.env pull
          docker --context azure-vm compose -f ./budgetwise/docker-compose.deploy.yml --env-file ./budgetwise/.env up --build -d


      - name: Verify deployment
        run: |
          docker compose -f ./budgetwise/docker-compose.deploy.yml ps

      - name: Reset Docker context
        if: always()
        run: |
          docker context use default
          docker context rm azure-vm
