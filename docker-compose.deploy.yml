version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: budgetwise_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/config/db/init:/docker-entrypoint-initdb.d
    networks:
      - budgetwise_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped



  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: budgetwise_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      HOST: 0.0.0.0
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      FIREBASE_SERVICE_ACCOUNT: ${FIREBASE_SERVICE_ACCOUNT}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
    expose:
      - "5000"
    depends_on:
      postgres:
        condition: service_healthy
      
    networks:
      - budgetwise_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: budgetwise_frontend
    environment:
      NODE_ENV: production
      PUBLIC_BACKEND_API_URL: ${PUBLIC_BACKEND_API_URL}
      PUBLIC_FIREBASE_API_KEY: ${PUBLIC_FIREBASE_API_KEY}
      PUBLIC_FIREBASE_AUTH_DOMAIN: ${PUBLIC_FIREBASE_AUTH_DOMAIN}
      PUBLIC_FIREBASE_PROJECT_ID: ${PUBLIC_FIREBASE_PROJECT_ID}
      PUBLIC_FIREBASE_STORAGE_BUCKET: ${PUBLIC_FIREBASE_STORAGE_BUCKET}
      PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      PUBLIC_FIREBASE_APP_ID: ${PUBLIC_FIREBASE_APP_ID}
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - budgetwise_network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: budgetwise_nginx
    ports:
      - "${PORT:-80}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - budgetwise_network
    restart: unless-stopped

volumes:
  postgres_data:
  

networks:
  budgetwise_network:
    driver: bridge
